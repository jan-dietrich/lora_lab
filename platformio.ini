; PlatformIO Project Configuration File
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/page/projectconf.html


; ---> SELECT TARGET PLATFORM HERE! <---
[platformio]
;env_default = generic
;env_default = ebox
;env_default = eboxtube
;env_default = heltec
env_default = heltecv2
;env_default = ttgov1
;env_default = ttgov2
;env_default = ttgov21old
;env_default = ttgov21new
;env_default = ttgobeam
;env_default = ttgofox
;env_default = lopy
;env_default = lopy4
;env_default = fipy
;env_default = lolin32litelora
;env_default = lolin32lora
;env_default = lolin32lite
;env_default = octopus32
;env_default = ebox, eboxtube, heltec, ttgobeam, lopy4, lopy, ttgov21old, ttgov21new, ttgofox
;
description = LoRa Module that is used to teach students about the possibilities and limits of LoRaWAN

[common]
; for release_version use max. 10 chars total, use any decimal format like "a.b.c"
release_version = 1.0
; DEBUG LEVEL: For production run set to 0, otherwise device will leak RAM while running!
; 0=None, 1=Error, 2=Warn, 3=Info, 4=Debug, 5=Verbose
debug_level = 5
; UPLOAD MODE: select esptool to flash via USB/UART, select custom to upload to cloud for OTA
upload_protocol = esptool
;upload_protocol = custom
extra_scripts = pre:build.py
keyfile = ota.conf
;platform_espressif32 = espressif32@1.7.0
platform_espressif32 = https://github.com/platformio/platform-espressif32.git#feature/stage
board_build.partitions = min_spiffs.csv
monitor_speed = 115200
lib_deps_lora =
    MCCI LoRaWAN LMIC library@>=2.3.2
    https://github.com/mcci-catena/arduino-lmic.git#6e5ebbe
lib_deps_display =
    U8g2@>=2.25.7
lib_deps_webserver = 
    ESP Async WebServer@>=1.2.0

[env:heltecv2]
platform = ${common.platform_espressif32}
framework = arduino
board = heltec_wifi_lora_32
board_build.partitions = ${common.board_build.partitions}
upload_speed = 921600
lib_deps =
    ${common.lib_deps_lora}
    ${common.lib_deps_display}
    ${common.lib_deps_webserver}
upload_protocol = ${common.upload_protocol}
extra_scripts = ${common.extra_scripts}
monitor_speed = ${common.monitor_speed}

[env:generic]
platform = ${common.platform_espressif32}
framework = arduino
board = esp32dev
board_build.partitions = ${common.board_build.partitions}
upload_speed = 921600
lib_deps = ${common.lib_deps_all}
build_flags = ${common.build_flags_all}
upload_protocol = ${common.upload_protocol}
extra_scripts = ${common.extra_scripts}
monitor_speed = ${common.monitor_speed}